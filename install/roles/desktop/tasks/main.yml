---
# tasks file for desktop
- name: Install basic packages for alpine linux
  become: yes
  apk:
    update_cache: yes
    name:
      - build-base
      - ncurses    #necessary for st that need tic
    state: present

- name: Install packages for desktops
  become: yes
  apk:
    update_cache: yes
    name:
      - xorg-server
      - xorg-server-dev
        #- xorg-xinit
      - lightdm
      - bspwm
      - sxhkd
      - rxvt-unicode
      - xclip
    state: present

- name: Install packages for audio
  become: yes
  apk:
    name:
      - pulseaudio
      - pulseaudio-alsa
      - bluez
        #      - bluez-utils
        #      - pulseaudio-bluetooth
        #      - pamixer
      - pulsemixer
    state: present

- name: enable service bluetooth
  become: yes
  service:
    name: bluetooth
    state: started
    enabled: yes

- name: Allow auto powering of bluetooth device on startup
  become: yes
  lineinfile:
    dest: /etc/bluetooth/main.conf
    state: present
    regexp: '^#AutoEnable=false'
    line: 'AutoEnable=true'

- name: Install packages for desktops2B
  become: yes
  apk:
    name:
#      - noto-fonts
      - qutebrowser
#      - awesome-terminal-fonts
    state: present

- name: Install packages for desktops2C
  become: yes
  apk:
    name:
      - libnotify
      - chromium
    state: present

- name: Install packages for desktops 3
  become: yes
  apk:
    name:
      - zathura
      - zathura-pdf-poppler
#      - rofi
      - picom
#      - conky
      - dunst
      - redshift
      - mpv
      - pass
      - wmctrl
      - xsel
      - scrot
#      - rtorrent
      - tlp
      - feh
      - light
      - font-iosevka-nerd
#      - task
#      - ffmpeg
      - imagemagick
    state: present


      #- name: Installing some software using yay
      #  yay:
      #    name:
      ##      - ttf-oxygen-gf
      #      - powerline-fonts-git
      #      - ttf-iosevka
      #      - pinentry-dmenu
      ##      - i3lock-fancy-git
      ##      - st-luke-git
      ##      - vit
      ##- lightdm-mini-greeter

    #TODO: Add xdg-handling
    #xdg-mime default org.qutebrowser.qutebrowser.desktop x-scheme-handler/http
    #xdg-mime default org.qutebrowser.qutebrowser.desktop x-scheme-handler/https
    #xdg-mime default org.pwmt.zathura.desktop application/pdf
    #xdg-mime default feh.desktop image/png
    #xdg-mime default feh.desktop image/jpg


      #- name: Install readabitity-lxml for readbility mode in qutebrowser
      #  pip:
      #    name:
      #      - readability-lxml


- name: Register existence of desktop config links
  stat:
    path: "{{ item.dest }}"
  loop: "{{ links_to_create }}"
  register: link_register

- name: Remove desktop config file if some default exists (not links)
  file:
    path: "{{ item.stat.path }}"
    state: absent
  loop: "{{ link_register.results }}"
  when: item.stat.islnk is defined and item.stat.islnk == False

- name: Create applications directory if it does not exist (will containing xdg-config)
  file:
    path: "{{ HOME }}/.local/share/applications"
    state: directory

- name: Create downloads directory if it does not exist
  file:
    path: "{{ HOME }}/downloads"
    state: directory

- name: Create music directory if it does not exist
  file:
    path: "{{ HOME }}/music"
    state: directory

- name: Create symbolic link for desktop config tools
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  loop: "{{ links_to_create }}"

- name: Create qutebrowser directory if it does not exist
  file:
    path: "{{ ansible_env.HOME }}/.local/share/qutebrowser"
    state: directory

- name: Create symbolic link for qutebrowser userscripts
  become: yes
  file:
    src: "{{ CONFIG_PERSO }}/qutebrowser/userscripts"
    dest: "{{ HOME }}/.local/share/qutebrowser/userscripts"
    state: link

      #- name: Create virtualenvs required for qutebrowser userscripts
      #command: ~/.config/perso/qutebrowser/userscripts/virtualenvs/create_virtualenvs.sh

- name: Create file for qutebrowser log
  become: yes
  file:
    path: "/var/log/qutebrowser_scripts.log"
    state: touch
    owner: alex
    group: wheel
    mode: '0644'


- name: Create screencasting directory if it does not exist
  file:
    path: "{{ ansible_env.HOME }}/videos/screencapture"
    state: directory


## Clones private repos
- name: Clone personal music diggings notes
  git:
    repo: "git@gitlab.com:AlxndrPsclt/music-diggings.git"
    dest: "{{ HOME }}/notes"
    key_file: "{{ HOME }}/.ssh/keys/id_ed25519.deploy.gitlab.priv"

- name: Clone personal wallpapers folder
  git:
    repo: "git@github.com:AlxndrPsclt/fundmntl-wallpapers.git"
    dest: "{{ HOME }}/images/fundmntl-wallpapers"
    key_file: "{{ HOME }}/.ssh/keys/id_ed25519.deploy.github.priv"

- name: Create apps directory if it does not exist
  file:
    path: "{{ ansible_env.HOME }}/apps"
    state: directory



- name: Clone personal minimalistic greeter
  git:
    repo: "git@github.com:AlxndrPsclt/vitamin-greeter.git"
    dest: "{{ HOME }}/apps/vitamin-greeter"
    key_file: "{{ HOME }}/.ssh/keys/id_ed25519.deploy.github.priv"

- name: Install packages for mini (??) greeter
  become: yes
  apk:
    name:
      - autoconf
      - automake
      - gtk+3.0-dev
      - lightdm-dev
    state: present

- name: Compile minimalistic greeter
  become: yes
  shell: ./makeinstall.sh
  args:
    chdir: "{{ HOME }}/apps/vitamin-greeter"
    #creates: somelog.txt


- name: Copy lightdm.conf files
  become: yes
  copy:
    src: "{{ HOME }}/.config/perso/lightdm/{{ item }}"
    dest: "/etc/lightdm/{{ item }}"
    remote_src: yes
    owner: root
    group: root
    mode: 644
    backup: no
  loop:
    - "lightdm.conf"
    - "lightdm-mini-greeter.conf"
    - "Xsession"

- name: Configures lightdm greeter to log in specified user
  become: yes
  lineinfile:
    dest: /etc/lightdm/lightdm-mini-greeter.conf
    state: present
    regexp: '^user = alex'
    line: "user = {{ USER }}"

- name: enable service lightdm
  become: yes
  service:
    name: lightdm
    state: started
    enabled: yes









- name: Install zsh and spaceship theme
  become: yes
  apk:
    name:
      - zsh
      - oh-my-zsh
      - zsh-vcs
    state: latest
    update_cache: yes


- name: Clone spaceship theme for oh-my-zsh
  become: yes
  git:
    repo: "https://github.com/denysdovhan/spaceship-prompt.git"
    dest: "/usr/share/oh-my-zsh/themes/spaceship-prompt"
    depth: 1
    accept_hostkey: yes


- name: Create symbolic link for spaceship theme
  become: yes
  file:
    src: "/usr/share/oh-my-zsh/themes/spaceship-prompt/spaceship.zsh-theme"
    dest: "/usr/share/oh-my-zsh/themes/spaceship.zsh-theme"
    state: link



- name: Install and conf tmux to get proper theming
  become: yes
  apk:
    name:
      - tmux
      # tmux plugin manager tpm requires bash! WTF. Need to check how to avoid this, but included for now
      - bash
    state: latest
    update_cache: yes








- name: Create apps/suckless directory if it does not exist
  file:
    path: "{{ ansible_env.HOME }}/apps/suckless"
    state: directory


- name: Clone personal dmenu source
  git:
    repo: "git@github.com:AlxndrPsclt/contxtl-dmenu.git"
    dest: "{{ HOME }}/apps/suckless/contxtl-dmenu"
    key_file: "{{ HOME }}/.ssh/keys/id_ed25519.deploy.github.priv"

- name: Install dependencies for dmenu
  become: yes
  apk:
    update_cache: yes
    name:
      # - libxinerama      #Seems useless for compilation of dmenu at least?
      - libxinerama-dev
      - libxft-dev
    state: present

- name: Compile minimalistic launcher menu
  shell: ./makeinstall.sh
  args:
    chdir: "{{ HOME }}/apps/suckless/contxtl-dmenu"


- name: Clone personal st source
  git:
    repo: "git@github.com:AlxndrPsclt/contxtl-st.git"
    dest: "{{ HOME }}/apps/suckless/contxtl-st"
    key_file: "{{ HOME }}/.ssh/keys/id_ed25519.deploy.github.priv"

- name: Compile minimalistic terminal
  become: yes
  shell: ./makeinstall.sh
  args:
    chdir: "{{ HOME }}/apps/suckless/contxtl-st"

- name: Clone pinentry-dmenu
  git:
    repo: "https://github.com/ritze/pinentry-dmenu.git"
    dest: "{{ HOME }}/apps/suckless/pinentry-dmenu.git"
    key_file: "{{ HOME }}/.ssh/keys/id_ed25519.deploy.github.priv"

- name: Install dependencies for pinentry-dmenu
  become: yes
  apk:
    update_cache: yes
    name:
      # - libxinerama      #Seems useless for compilation of dmenu at least?
      - libassuan-dev
      - libconfig-dev
      - gpgme-dev
    state: present


- name: Compile pinentry-dmenu
  become: yes
  shell: make clean install
  args:
    chdir: "{{ HOME }}/apps/suckless/pinentry-dmenu"

