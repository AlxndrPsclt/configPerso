---
# tasks file for desktop

- name: Install packages for desktops
  become: yes
  pacman:
    name:
      - xorg
      - xorg-xinit
      - lightdm
      - bspwm
      - sxhkd
      - rxvt-unicode
      - xclip
    state: present

- name: Install packages for audio
  become: yes
  pacman:
    name:
      - pulseaudio
      - pulseaudio-alsa
      - bluez
      - bluez-utils
      - pulseaudio-bluetooth
      - pamixer
    state: present

- name: Install packages for desktops2B
  become: yes
  pacman:
    name:
#      - noto-fonts
      - qutebrowser
      - awesome-terminal-fonts
    state: present

- name: Install packages for desktops2C
  become: yes
  pacman:
    name:
      - libnotify
      - chromium
    state: present

- name: Install packages for desktops 3
  become: yes
  pacman:
    name:
      - zathura
      - zathura-pdf-poppler
#      - rofi
      - picom
#      - conky
      - dunst
      - redshift
      - mpv
      - pass
      - wmctrl
      - xsel
      - scrot
#      - rtorrent
      - tlp
      - feh
      - light
#      - task
#      - ffmpeg
    state: present

- name: Allow auto powering of bluetooth device on startup
  become: yes
  lineinfile:
    dest: /etc/bluetooth/main.conf
    state: present
    regexp: '^#AutoEnable=false'
    line: 'AutoEnable=true'

- name: Installing some software using yay
  yay:
    name:
#      - ttf-oxygen-gf
      - powerline-fonts-git
      - ttf-iosevka
#      - i3lock-fancy-git
#      - st-luke-git
#      - vit
#- lightdm-mini-greeter
      - pulsemixer

    #TODO: Add xdg-handling
    #xdg-mime default org.qutebrowser.qutebrowser.desktop x-scheme-handler/http
    #xdg-mime default org.qutebrowser.qutebrowser.desktop x-scheme-handler/https
    #xdg-mime default org.pwmt.zathura.desktop application/pdf
    #xdg-mime default feh.desktop image/png
    #xdg-mime default feh.desktop image/jpg




- name: Register existence of desktop config links
  stat:
    path: "{{ item.dest }}"
  loop: "{{ links_to_create }}"
  register: link_register

- name: Remove desktop config file if some default exists (not links)
  file:
    path: "{{ item.stat.path }}"
    state: absent
  loop: "{{ link_register.results }}"
  when: item.stat.islnk is defined and item.stat.islnk == False

- name: Create applications directory if it does not exist (will containing xdg-config)
  file:
    path: "{{ HOME }}/.local/share/applications"
    state: directory

- name: Create downloads directory if it does not exist
  file:
    path: "{{ HOME }}/downloads"
    state: directory

- name: Create music directory if it does not exist
  file:
    path: "{{ HOME }}/music"
    state: directory

- name: Create symbolic link for desktop config tools
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  loop: "{{ links_to_create }}"

- name: Create qutebrowser directory if it does not exist
  file:
    path: "{{ ansible_env.HOME }}/.local/share/qutebrowser"
    state: directory

- name: Create symbolic link for qutebrowser userscripts
  become: yes
  file:
    src: "{{ CONFIG_PERSO }}/qutebrowser/userscripts"
    dest: "{{ HOME }}/.local/share/qutebrowser/userscripts"
    state: link

      #- name: Create virtualenvs required for qutebrowser userscripts
      #command: ~/.config/perso/qutebrowser/userscripts/virtualenvs/create_virtualenvs.sh

- name: Create file for qutebrowser log
  become: yes
  file:
    path: "/var/log/qutebrowser_scripts.log"
    state: touch
    owner: alex
    group: wheel
    mode: '0644'

- name: Enable service bluetooth
  become: yes
  systemd:
    name: bluetooth
    state: started
    enabled: yes
    masked: no

- name: Create screencasting directory if it does not exist
  file:
    path: "{{ ansible_env.HOME }}/videos/screencapture"
    state: directory


## Clones private repos
- name: Clone personal music diggings notes
  git:
    repo: "git@gitlab.com:AlxndrPsclt/music-diggings.git"
    dest: "{{ HOME }}/notes"
    key_file: "{{ HOME }}/.ssh/keys/id_ed25519.deploy.gitlab.priv"

- name: Clone personal wallpapers folder
  git:
    repo: "git@github.com:AlxndrPsclt/fundmntl-wallpapers.git"
    dest: "{{ HOME }}/images/fundmntl-wallpapers"
    key_file: "{{ HOME }}/.ssh/keys/id_ed25519.deploy.github.priv"


    #- name: Clone personal tasklist
    #  git:
    #    repo: "https://oauth2:{{ gitlab_token }}@gitlab.com/AlxndrPsclt/tasks.git"
    #    dest: "{{ HOME }}/.task"
    #

- name: Create apps directory if it does not exist
  file:
    path: "{{ ansible_env.HOME }}/apps"
    state: directory



- name: Clone personal minimalistic greeter
  git:
    repo: "git@github.com:AlxndrPsclt/vitamin-greeter.git"
    dest: "{{ HOME }}/apps/vitamin-greeter"
    key_file: "{{ HOME }}/.ssh/keys/id_ed25519.deploy.github.priv"

- name: Compile minimalistic greeter
  shell: ./makeinstall.sh
  args:
    chdir: "{{ HOME }}/apps/vitamin-greeter"
    #creates: somelog.txt


- name: Copy lightdm.conf files
  become: yes
  copy:
    src: "{{ HOME }}/.config/perso/lightdm/{{ item }}"
    dest: "/etc/lightdm/{{ item }}"
    remote_src: yes
    owner: root
    group: root
    mode: 644
    backup: no
  loop:
    - "lightdm.conf"
    - "lightdm-mini-greeter.conf"

- name: Configures lightdm greeter to log in specified user
  become: yes
  lineinfile:
    dest: /etc/lightdm/lightdm-mini-greeter.conf
    state: present
    regexp: '^user = alex'
    line: "user = {{ USER }}"

- name: enable service lightdm
  become: yes
  systemd:
    name: lightdm
    state: started
    enabled: yes
    masked: no




- name: Create apps/suckless directory if it does not exist
  file:
    path: "{{ ansible_env.HOME }}/apps/suckless"
    state: directory


- name: Clone personal dmenu build
  git:
    repo: "git@github.com:AlxndrPsclt/contxtl-dmenu.git"
    dest: "{{ HOME }}/apps/suckless/contxtl-dmenu"
    key_file: "{{ HOME }}/.ssh/keys/id_ed25519.deploy.github.priv"

- name: Compile minimalistic launcher menu
  shell: ./makeinstall.sh
  args:
    chdir: "{{ HOME }}/apps/suckless/contxtl-dmenu"


- name: Clone personal st build
  git:
    repo: "git@github.com:AlxndrPsclt/contxtl-st.git"
    dest: "{{ HOME }}/apps/suckless/contxtl-st"
    key_file: "{{ HOME }}/.ssh/keys/id_ed25519.deploy.github.priv"

- name: Compile minimalistic terminal
  shell: ./makeinstall.sh
  args:
    chdir: "{{ HOME }}/apps/suckless/contxtl-st"

