---
# tasks file for desktop

- name: Install packages for desktops
  become: yes
  pacman:
    name:
      - xorg
      - xorg-xinit
      - i3-gaps
      - rxvt-unicode
      - xclip
      - pulseaudio
      - pulseaudio-alsa
      - pulseaudio-bluetooth
      - pamixer
      - awesome-terminal-fonts
      - libnotify
      - qutebrowser
      - chromium
      - zathura
      - zathura-pdf-poppler
      - rofi
      - compton
      - conky
      - dunst
      - redshift
      - mpv
      - pass
      - wmctrl
      - xsel
      - scrot
      - rtorrent
      - tlp
      - feh
      - light
      - task
      - ffmpeg
    state: present

##Add nixshell install

- name: Allow 'wheel' group to have passwordless sudo
  become: yes
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^# %wheel ALL=(ALL) NOPASSWD: ALL'
    line: '%wheel ALL=(ALL) NOPASSWD: ALL'
    validate: visudo -cf %s

- name: Installing some software using yay
  yay:
    name:
      - ttf-oxygen-gf
      - powerline-fonts-git
      - i3lock-fancy-git
      - st-luke-git
      - ly-git
      - vit

- name: enable service ly
  systemd:
    name: ly
    state: started
    enabled: yes
    masked: no

- name: Deactivale 'wheel' group passwordless sudo
  become: yes
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%wheel ALL=(ALL) NOPASSWD: ALL'
    line: '# %wheel ALL=(ALL) NOPASSWD: ALL'
    validate: visudo -cf %s

    #TODO: Add xdg-handling
    #xdg-mime default org.qutebrowser.qutebrowser.desktop x-scheme-handler/http
    #xdg-mime default org.qutebrowser.qutebrowser.desktop x-scheme-handler/https
    #xdg-mime default org.pwmt.zathura.desktop application/pdf
    #xdg-mime default feh.desktop image/png
    #xdg-mime default feh.desktop image/jpg
    #




- name: Register existence of desktop config links
  stat:
    path: "{{ item.dest }}"
  loop: "{{ links_to_create }}"
  register: link_register

- name: Remove desktop config file if some default exists (not links)
  file:
    path: "{{ item.stat.path }}"
    state: absent
  loop: "{{ link_register.results }}"
  when: item.stat.islnk is defined and item.stat.islnk == False

- name: Create symbolic link for desktop config tools
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  loop: "{{ links_to_create }}"

- name: Create qutebrowser directory if it does not exist
  file:
    path: "{{ ansible_env.HOME }}/.local/share/qutebrowser"
    state: directory

- name: Create symbolic link for qutebrowser userscripts
  become: yes
  file:
    src: "{{ CONFIG_PERSO }}/qutebrowser/userscripts"
    dest: "{{ HOME }}/.local/share/qutebrowser/userscripts"
    state: link

- name: Create virtualenvs required for qutebrowser userscripts
  command: ~/.config/perso/qutebrowser/userscripts/virtualenvs/create_virtualenvs.sh


- name: Create screencasting directory if it does not exist
  file:
    path: "{{ ansible_env.HOME }}/Videos/screencapture"
    state: directory


# Clones private repos (passwords and stuff)
- include_vars: credentials.yml

- name: Clone personal password vault
  git:
    repo: "https://oauth2:{{ gitlab_token }}@gitlab.com/AlxndrPsclt/password-store.git"
    dest: "{{ HOME }}/.password-store"

- name: Clone personal music diggings notes
  git:
    repo: "https://oauth2:{{ gitlab_token }}@gitlab.com/AlxndrPsclt/music-diggings.git"
    dest: "{{ HOME }}/Notes"

- name: Clone personal wallpapers folder
  git:
    repo: "https://oauth2:{{ gitlab_token }}@gitlab.com/AlxndrPsclt/wallpapers.git"
    dest: "{{ HOME }}/Pictures/wallpapers"

- name: Clone personal tasklist
  git:
    repo: "https://oauth2:{{ gitlab_token }}@gitlab.com/AlxndrPsclt/tasks.git"
    dest: "{{ HOME }}/.task"

